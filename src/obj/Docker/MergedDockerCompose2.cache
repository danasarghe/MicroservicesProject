services:
  basket.api:
    build:
      context: .
      dockerfile: Services/Basket/Basket.Api/Dockerfile
    container_name: basket.api
    depends_on:
      basketdb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      CacheSettings:ConnectionString: basketdb:6379
      GrpcSettings:DiscountUrl: http://discount.grpc
    image: basketapi
    ports:
    - mode: ingress
      target: 80
      published: 8001
      protocol: tcp
  basketdb:
    container_name: basketdb
    image: redis:alpine
    ports:
    - mode: ingress
      target: 6379
      published: 6379
      protocol: tcp
    restart: always
  catalog.api:
    build:
      context: .
      dockerfile: Services/Catalog/Catalog.Api/Dockerfile
    container_name: catalog.api
    depends_on:
      catalogdb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DatabaseSettings:ConnectionString: mongodb://catalogdb:27017
    image: catalogapi
    ports:
    - mode: ingress
      target: 80
      published: 8000
      protocol: tcp
  catalogdb:
    container_name: catalogdb
    image: mongo
    ports:
    - mode: ingress
      target: 27017
      published: 27017
      protocol: tcp
    restart: always
    volumes:
    - type: volume
      source: mongo_data
      target: /data/db
      volume: {}
  discount.api:
    build:
      context: .
      dockerfile: Services/Discount/Discount.Api/Dockerfile
    container_name: discount.api
    depends_on:
      discountdb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DatabaseSettings:ConnectionString: Server=discountdb;Port=5432;Database=DiscountDb;User
        Id=admin;Password=admin1234;
    image: discountapi
    ports:
    - mode: ingress
      target: 80
      published: 8002
      protocol: tcp
  discount.grpc:
    build:
      context: .
      dockerfile: Services/Discount/Discount.Grpc/Dockerfile
    container_name: discount.grpc
    depends_on:
      discountdb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DatabaseSettings:ConnectionString: Server=discountdb;Port=5432;Database=DiscountDb;User
        Id=admin;Password=admin1234;
    image: discountgrpc
    ports:
    - mode: ingress
      target: 80
      published: 8003
      protocol: tcp
  discountdb:
    container_name: discountdb
    environment:
      POSTGRES_DB: DiscountDb
      POSTGRES_PASSWORD: admin1234
      POSTGRES_USER: admin
    image: postgres
    ports:
    - mode: ingress
      target: 5432
      published: 5432
      protocol: tcp
    restart: always
    volumes:
    - type: volume
      source: postgres_data
      target: /var/lib/postgresql/data
      volume: {}
  orderdb:
    container_name: orderdb
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: SwN12345678
    image: mcr.microsoft.com/mssql/server:2017-latest
    ports:
    - mode: ingress
      target: 1433
      published: 1433
      protocol: tcp
    restart: always
  pgadmin:
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@aspnetrun.com
      PGADMIN_DEFAULT_PASSWORD: admin1234
    image: dpage/pgadmin4
    ports:
    - mode: ingress
      target: 80
      published: 5050
      protocol: tcp
    restart: always
    volumes:
    - type: volume
      source: pgadmin_data
      target: /root/.pgadmin
      volume: {}
  portainer:
    container_name: portainer
    image: portainer/portainer-ce
    ports:
    - mode: ingress
      target: 8000
      published: 8080
      protocol: tcp
    - mode: ingress
      target: 9000
      published: 9000
      protocol: tcp
    restart: always
    volumes:
    - type: bind
      source: /var/run/docker.sock
      target: /var/run/docker.sock
      bind:
        create_host_path: true
    - type: volume
      source: portainer_data
      target: /data
      volume: {}
volumes:
  mongo_data: {}
  pgadmin_data: {}
  portainer_data: {}
  postgres_data: {}